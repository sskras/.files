#! /usr/bin/env sh

# SPDX-License-Identifier: BlueOak-1.0.0
# SPDX-FileCopyrightText: 2023 Saulius Krasuckas <saulius2_at_ar-fi_point_lt> | sskras

# Bootstrap tools & shell environment to manage home-dir and its' dot-files.

DEPS="git make rsync"

# 0, Fail early:
set -e

# 10. Protect the script from truncating in transit:
main () {

    # 15. If no fetchers available, demand `curl` then (the preffered tool):
    fetch -V 1>/dev/null 2>&1 || DEPS="${DEPS} curl"

    # 20, Detect if some tools are missing, e.g. git, make.
    for CMD in ${DEPS}; do
        if ! command -v ${CMD} >/dev/null; then
            MISSING="${MISSING} ${CMD}"
            RET=$((RET + 1))
        fi
    done

    # 30. Report the lack, if any:
    [ -n "${MISSING}" ] && error

    # 40. Deploy the repo, checkout the files:
    fetch https://raw.githubusercontent.com/sskras/.files/main/.local/Makefile | make -f- install
    # TODO: Convert `.local/Makefile` into Bash functions, so we have one depedency less.
    # TODO: Maybe just use the current script.

    # 50. Print the summarizing instructions:
    cd
    cat README.asciidoc | .local/bin/tail-extract "After deployment is over, " --trim --caps "^=="
}

fetch () {
    curl -sS     "${@}" || \
    wget -nv -O- "${@}" || \
    return 177
}

error () {
    # In case the deps are missing, ask user to install them.
    # Maybe suggest running a specific script as root, e.g:
    cat <<- \
	-------------------------------------------------------------------------------------------
	Needed executables are missing:

	 ${MISSING}

	(if 'curl' is mentioned, you can use 'wget' instead)

	Please install them before retrying, eg:

	  apt install -y git make

	Or use a dedicated script:

	  cd /tmp
	  curl -O https://raw.githubusercontent.com/saukrs/linux-steps/main/steps-01-bootstrap
	  cat steps-01-bootstrap
	  su -c sh steps-01-bootstrap git make
	  rm -v steps-01-bootstrap
	  cd -

	Or just blindly pipe it from the repo to the shell:

	  su -c 'curl -L t.co/UIgzvkqDI4 | sh -s git make'
	-------------------------------------------------------------------------------------------
    exit $RET
}

main
