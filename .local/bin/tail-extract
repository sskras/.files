#! /usr/bin/env -S awk -f

# SPDX-License-Identifier: BlueOak-1.0.0
# SPDX-FileCopyrightText: 2024 Saulius Krasuckas <saulius2_at_ar-fi_point_lt> | sskras

# Extract the expected part of text from stdin.

BEGIN \
{
    for (i = 1; i < ARGC; i++)
    {
        arg = ARGV[i]

        # Make sure the argument isn't interpreted as an input file name during processing later:
        ARGV[i] = ""
        # Via: https://stackoverflow.com/questions/12701934/awk-pass-arguments-argv-and-file-to-parse-in-the-same-command/12702053#12702053

        if (arg == "--caps")
        {
            CAPS = 1
        }
        else if (arg == "--trim")
        {
            TRIM = 1
        }
        else if (START_PATTERN == "")
        {
            START_PATTERN = arg
        }
        else if (STOP_PATTERN == "")
        {
            STOP_PATTERN = arg
        }
    }
}

!GO && $0 ~ START_PATTERN \
{
    GO=1

    # Index of the string being trimmed:
    START_PATTERN_BEGINS = index($0, START_PATTERN)

    # Index of the letter following the string being trimmed:
    TAIL_BEGINS = START_PATTERN_BEGINS + length(START_PATTERN)

    if (TRIM)
    {
        if (CAPS)
        {
            # Capitalize the now leading letter:
            LEAD = toupper(substr($0, TAIL_BEGINS, 1))
            TAIL_BEGINS++
        }

        TAIL = substr($0, TAIL_BEGINS)

        $0 = LEAD TAIL
    }

    # Via: https://www.unix.com/unix-for-dummies-questions-and-answers/174978-awk-changing-first-char-small-upper.html#postcount302590311

    print ""
}

GO && STOP_PATTERN && $0 ~ STOP_PATTERN \
{
    # Found the optional stop pattern. Stop printing immediately:
    exit
}

GO
    # Just print everything

