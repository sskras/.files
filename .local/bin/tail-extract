#! /usr/bin/env -S awk -f

# SPDX-License-Identifier: BlueOak-1.0.0
# SPDX-FileCopyrightText: 2024 Saulius Krasuckas <saulius2_at_ar-fi_point_lt> | sskras

# Extract the expected part of text from stdin.

BEGIN \
{
    TRIGGER=ARGV[1]

    for (i = 1; i < ARGC; i++)
    {
        arg = ARGV[i]
        ARGV[i] = ""

        if (arg == "--caps")
        {
            CAPS = 1
        }
    }

    # Make sure the string isn't interpreted an input file name:
    ARGV[1]=""
    # Via: https://stackoverflow.com/questions/12701934/awk-pass-arguments-argv-and-file-to-parse-in-the-same-command/12702053#12702053
}

$0~TRIGGER \
{
    GO=1

    # Index of the string being trimmed:
    START_OF_TRIGGER = index($0, TRIGGER)

    # Index of the letter following the string being trimmed:
    TAIL_BEGINS = START_OF_TRIGGER + length(TRIGGER)

    if (CAPS)
    {
    # Capitalize the now leading letter:
    LEAD = toupper(substr($0, TAIL_BEGINS, 1))
    TAIL_BEGINS++
    }

    TAIL = substr($0, TAIL_BEGINS)

    $0 = LEAD TAIL

    # Via: https://www.unix.com/unix-for-dummies-questions-and-answers/174978-awk-changing-first-char-small-upper.html#postcount302590311

    print ""
}

GO
    # Just print everything

# TODO:
# - Make trimming optional.
# - Make capitalization optional.
